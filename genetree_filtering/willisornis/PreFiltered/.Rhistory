ggtree(cladeB)
ggtree(cladeE)
cladeC=read.tree("AMNH/Pachyramphus/BPP_trees/cin-cas.tre")
ggtree(cladeC)
ggtree(cladeC)
ggtree(cladeE)
plotTree(CladeE)
plotTree(cladeE)
plotTree(cladeA)
cladeA=read.tree("AMNH/Pachyramphus/BPP_trees/agl-hom-val.tre")
cladeB=read.tree("AMNH/Pachyramphus/BPP_trees/vir-vers.tre")
cladeC=read.tree("AMNH/Pachyramphus/BPP_trees/cin-cas.tre")
cladeD=read.tree("AMNH/Pachyramphus/BPP_trees/alb-maj.tre")
cladeE=read.tree("AMNH/Pachyramphus/BPP_trees/poly-guay_ST.tre")
plotTree(cladeA)
ggtree(cladeA)
p1<-ggtree(cladeA)
p2<-ggtree(cladeB)
p3<-ggtree(cladeC)
p4<-ggtree(cladeD)
p5<-ggtree(cladeE)
multiplot(p1,p2,p3,p4,p5,ncol=5)
?ggtree
p1<-ggtree(cladeA,layout='slanted')
ggtree(cladeA,layout='slanted')
ggtree(cladeA,layout='slanted',left)
ggtree(cladeA,layout='slanted',right=F)
ggtree(cladeA,layout='slanted',open.angle=0)
ggtree(cladeA,layout='slanted',open.angle=90)
ggtree(cladeA,layout='slanted',right=TRUE)
ggtree(cladeA,layout='slanted',up=TRUE)
ggtree(cladeA,layout='slanted',rotate=90)
ggtree(cladeA,layout='slanted',rotate)
p1<-ggtree(cladeA,layout='slanted')
p1
rotate(p1)
?rotate
multiplot(p1,p2,p3,p4,p5,nrow=5)
multiplot(p1,p2,p3,p4,p5,ncol=5)
ggtree(cladeA,layout='slanted')
ggtree(cladeB,layout='slanted')
ggtree(cladeC,layout='slanted')
ggtree(cladeD,layout='slanted')
ggtree(cladeE,layout='slanted')
ggtree(cladeE,layout='slanted')
ggtree(cladeD,layout='slanted')
ggtree(cladeB,layout='slanted')
library(ape)
library(phangorn)
library(phytools)
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/uce-filtered-alignments-without-gator-concatenated 2.phylip")
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/uce-filtered-alignments-without-gator-concatenated.phylip")
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/uce-filtered-alignments-without-gator-concatenated.phylip")
Y<-read.phyDat("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/uce-filtered-alignments-without-gator-concatenated.phylip")
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
dist.logDet
?dist.logDet
dm1<-dist.logDet(X,model="GTR")
dm1<-dist.logDet(X,model="F81")
dm1<-dist.logDet(X,model = "F81")
dm1<-dist.logDet(X)
X<-as.phyDat(X)
X<-as.DNAbin(X)
X<-as.phyDat(X)
dm1<-dist.logDet(X, model="GTR")
dm1<-dist.logDet(X, model="F81")
dm1<-dist.logDet(X)
dm1
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/uce-filtered-alignments-without-gator-concatenated.phylip")
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
X<-as.DNAbin(X)
X<-as.phyDat(X)
dm1<-dist.logDet(X)
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/")
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/")
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/")
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/uce-filtered-alignments-without-gator-concatenated.phylip")
library(ape)
library(phangorn)
library(phytools)
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
X<-as.DNAbin(X)
X<-as.phyDat(X)
dm1<-dist.logDet(X)
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
X<-as.DNAbin(X)
X<-as.phyDat(X)
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
X<-read.nexus.data("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/RAG_Tityridae_17Oct16.nex")
X<-as.DNAbin(X)
X<-as.phyDat(X)
dm1<-dist.logDet(X)
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/uce-filtered-alignments-without-gator-concatenated.phylip")
read.dna
?read.dna
plot(dm1,dm1)
Y<-read.dna("/Users/lmusher/AMNH/Pachyramphus/biogeography/uce-timetree/48-birds/distance_regression/uce-filtered-alignments-without-gator-concatenated2.phylip")
install.packages("tidyverse")
library(tidyverse)
library(diversitree)
library(coda)
library(diversitree)
install.packages("phyloch")
#install.packages("optimx")
library(optimx)         # You need to have some version of optimx available
# as it is a BioGeoBEARS dependency; however, if you
# don't want to use optimx, and use optim() (from R core)
# you can set:
# BioGeoBEARS_run_object$use_optimx = FALSE
# ...everything should work either way -- NJM 2014-01-08
#install.packages("FD")
library(FD)       # for FD::maxent() (make sure this is up-to-date)
#install.packages("snow")
library(snow)     # (if you want to use multicore functionality; some systems/R versions prefer library(parallel), try either)
library(parallel)
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
library(phylobase)
install.packages("tibble")
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
library(phylobase)
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
library(tibble)
library(BioGeoBEARS)
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
library(devtools)
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
install.packages("devtools")
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
#install.packages("devtools")
library(devtools)
install_github("phylobase", "fmichonneau")
install_github("phylobase", "fmichonneau")
library("BioGeoBEARS", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install_github("phylobase", "fmichonneau")
#install.packages("BioGeoBEARS")
install.packages("phylobase")
library(phylobase)
devtools::install_github("tidyverse/tibble")
# The easiest way to get tibble is to install the whole tidyverse:
install.packages("tidyverse")
# The easiest way to get tibble is to install the whole tidyverse:
#install.packages("tidyverse")
# Alternatively, install just tibble:
install.packages("tibble")
# The easiest way to get tibble is to install the whole tidyverse:
#install.packages("tidyverse")
# Alternatively, install just tibble:
#install.packages("tibble")
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
#install.packages("devtools")
library(phylobase)
# The easiest way to get tibble is to install the whole tidyverse:
#install.packages("tidyverse")
# Alternatively, install just tibble:
#install.packages("tibble")
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
#install.packages("devtools")
devtools::install_github("tidyverse/tibble")
install.packages("/Applications/tidyverse-tibble-v1.4.1.9000-1-gbb664cb.zip", repos = NULL, type="source")
# The easiest way to get tibble is to install the whole tidyverse:
#install.packages("tidyverse")
# Alternatively, install just tibble:
#install.packages("tibble")
#install.packages("BioGeoBEARS")
#install.packages("phylobase")
#install.packages("devtools")
devtools::install_github("tidyverse/tibble")
?system
pca <- read.csv("~/Desktop/Psophia_10PCs.csv")
attach(pca)
names (pca)
plot(PC1,PC2)
pca <- read.csv("~/Desktop/Psophia_10PCs.csv")
attach(pca)
names (pca)
PC1[Pop==P_crepitans]
Pop
PC1[Pop=P_crepitans]
PC1[Pop==P_crepitans]
PC1[Pop==P_crepitans,]
PC1[pca$Pop==P_crepitans]
PC1[pca$Pop=="P_crepitans"]
PC1[Pop=="P_crepitans"]
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-60,60), ylim=c(-80,40))
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="red")
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-60,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red")
plot(PC1,PC2)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="red")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
Pop
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,40), ylim=c(0,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,60), ylim=c(0,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,50), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
source('~/.active-rstudio-document')
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pt=2)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pty=2)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pty=1)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pca=1)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pca=2)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = `9`)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="darkred", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="darkblue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="darkgreen", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,50), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-5,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,50), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(25,50), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(30,45), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
plot(PC1,PC2)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1,PC3)
plot(PC1,PC3)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-60,-40), ylim=c(-80,40), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-70,-40), ylim=c(-80,50), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-65,-40), ylim=c(-80,50), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-65,-40), ylim=c(-70,50), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC2[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-65,-40), ylim=c(-70,50), pch=19)
points(PC2[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC2[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC2[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-15,15), ylim=c(-70,50), pch=19)
points(PC2[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC2[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC4[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-15,15), ylim=c(-70,50), pch=19)
points(PC4[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC4[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(30,45), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
library(devtools)
install_github("gehara/Pipemaster@developing")
source('~/.active-rstudio-document')
model<-main.menu()
library(pipemaster)
install.packages("phybase")
library(devtools)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("bomeara/phybase")
install.packages("devtools")
install.packages("devtools")
#install.packages("devtools")
library(devtools)
devtools::install_github("bomeara/phybase")
#install.packages("devtools")
library(devtools)
devtools::install_github("bomeara/phybase")
install_github("gehara/Pipemaster@developing")
install.packages("/Users/lmusher/AMNH/Monachus/phybase-master/")
install.packages("https://faculty.franklin.uga.edu/lliu/sites/faculty.franklin.uga.edu.lliu/files/phybase_1.4.tar.gz", repos=NULL)
install.packages("phybase")
devtools::install_github("bomeara/phybase")
install_github("gehara/Pipemaster@developing")
#install.packages("devtools")
library(devtools)
install_github("gehara/Pipemaster@developing")
install_github("cran/phybase")
install.packages("Rtools")
install.packages("rtools")
#install.packages("devtools")
library(devtools)
install_github("cran/phybase")
install_github("gehara/Pipemaster@developing")
model<-main.menu()
install_github("gehara/Pipemaster")
install_github("gehara/Pipemaster@developing")
library(PipeMaster)
model<-main.menu()
install.packages("phrapl")
if(!require("ape")){install.packages("ape",repos="http://cran.rstudio.com")}
if(!require("partitions")){install.packages("partitions",repos="http://cran.rstudio.com")}
if(!require("lattice")){install.packages("lattice",repos="http://cran.rstudio.com")}
if(!require("polynom")){install.packages("polynom",repos="http://cran.rstudio.com")}
if(!require("gmp")){install.packages("gmp",repos="http://cran.rstudio.com")}
if(!require("rgenoud")){install.packages("rgenoud",repos="http://cran.rstudio.com")}
if(!require("parallel")){install.packages("parallel",repos="http://cran.rstudio.com")}
if(!require("optimx")){install.packages("optimx",repos="http://cran.rstudio.com")}
if(!require("igraph")){install.packages("igraph",repos="http://cran.rstudio.com")}
if(!require("numDeriv")){install.packages("numDeriv",repos="http://cran.rstudio.com")}
if(!require("nloptr")){install.packages("nloptr",repos="http://cran.rstudio.com")}
if(!require("Matrix")){install.packages("Matrix",repos="http://cran.rstudio.com")}
if(!require("rgl")){install.packages("rgl",repos="http://cran.rstudio.com")}
if(!require("RColorBrewer")){install.packages("RColorBrewer",repos="http://cran.rstudio.com")}
if(!require("igraph")){install.packages("igraph",repos="http://cran.rstudio.com")}
if(!require("diagram")){install.packages("diagram",repos="http://cran.rstudio.com")}
if(!require("binom")){install.packages("binom",repos="http://cran.rstudio.com")}
if(!require("P2C2M")){install.packages("P2C2M",repos="http://cran.rstudio.com")}
devtools::install_github("bomeara/phrapl")
LR=2*(-81.68+-71.77)
pchisq(LR,1,lower.tail = FALSE)
?AIC
LR
LR=2*(ln(-81.68)-71.77)
LR=2*(log(-81.68)-log(71.77))
LR
LR=2*(log(-81.68)-log(-71.77))
LR=2*(-81.68)--71.77)
LR
LR=2*(-81.68)-(-71.77)
LR
pchisq(LR,1,lower.tail = FALSE)
LR=2*((-81.68)-(-71.77))
LR
pchisq(LR,1,lower.tail = FALSE)
pchisq(LR,1,lower.tail = FALSE)
pchisq(LR,3,lower.tail = FALSE)
pchisq(LR,4,lower.tail = FALSE)
pchisq(LR,1,lower.tail = FALSE)
p<-pchisq(LR,1,lower.tail = FALSE)
p
pchisq(19.82,1,lower.tail = FALSE)
LR=abs(2*((-81.68)-(-71.77)))
LR
pchisq(19.82,1,lower.tail = FALSE)
pchisq(LR,1,lower.tail = FALSE)
install.packages(c('knitr','dplyr','ggplot2','rmarkdown','devtools'), dep=T)
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/willisornis/")
tab<-read.csv("Phleg_gt_metrics.csv",header = T)
tab<-read.csv("Willis_gt_metrics.csv",header = T)
attach(tab)
names(tab)
var.sites<-as.numeric(var.sites)
LR<-as.vector(LR)
plot(var.sites,LR)
abline(lm(LR~var.sites),col="red")
summary(lm(LR~var.sites))
plot(var.frac,LR)
abline(lm(LR~var.frac),col="red")
summary(lm(LR~var.frac))
plot(var.sites,logLikelihood)
abline(lm(logLikelihood~var.sites),col="red")
summary(lm(logLikelihood~var.sites))
plot(var.frac,logLikelihood)
abline(lm(logLikelihood~var.frac),col="red")
summary(lm(logLikelihood~var.frac))
plot(LR,logLikelihood)
mod<-glm(LR~var.sites*logLikelihood*var.frac)
summary(mod)
cooksd<-cooks.distance(mod)
plot(cooksd, pch="+", cex=1, main="Influential Obs by Cooks distance")
influential <- as.numeric(names(cooksd)[cooksd > 4*mean(cooksd, na.rm=T)])
tab[influential, ]
influential
x<-c(1:length(LR))
filtered_tab<-tab[! x %in% influential,]
write.csv(filtered_tab,file="filtered_tab.csv")
rm(list=ls())
library(gmodels)
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/willisornis/")
tab<-read.csv("Willis_gt_metrics.csv",header = T)
attach(tab)
names(tab)
var.sites<-as.numeric(var.sites)
LR<-as.vector(LR)
plot(var.sites,LR)
abline(lm(LR~var.sites),col="red")
summary(lm(LR~var.sites))
plot(var.frac,LR)
abline(lm(LR~var.frac),col="red")
summary(lm(LR~var.frac))
plot(var.sites,logLikelihood)
abline(lm(logLikelihood~var.sites),col="red")
summary(lm(logLikelihood~var.sites))
plot(var.frac,logLikelihood)
abline(lm(logLikelihood~var.frac),col="red")
summary(lm(logLikelihood~var.frac))
plot(LR,logLikelihood)
mod<-glm(LR~var.sites*logLikelihood*var.frac)
summary(mod)
cooksd<-cooks.distance(mod)
influential <- as.numeric(names(cooksd)[cooksd > 4*mean(cooksd, na.rm=T)])
tab[influential, ]
influential
x<-c(1:length(LR))
filtered_tab<-tab[! x %in% influential,]
write.csv(filtered_tab,file="filtered_tab.csv")
filtered_tab<-read.csv("filtered_tab.csv")
plot(filtered_tab$seq.length,filtered_tab$var.sites)
plot(filtered_tab$seq.length,filtered_tab$var.frac)
plot(filtered_tab$var.frac,filtered_tab$var.sites)
plot(filtered_tab$var.sites,filtered_tab$LR)
plot(filtered_tab$var.sites,filtered_tab$logLikelihood)
plot(filtered_tab$LR,filtered_tab$logLikelihood)
confidence_interval <- function(vector, interval) {
# Standard deviation of sample
vec_sd <- sd(vector)
# Sample size
n <- length(vector)
# Mean of sample
vec_mean <- mean(vector)
# Error according to t distribution
error <- qt((interval + 1)/2, df = n - 1) * vec_sd / sqrt(n)
# Confidence interval as a vector
result <- c("lower" = vec_mean - error, "upper" = vec_mean + error)
return(result)
}
conf<-confidence_interval(filtered_tab$var.sites,0.975)
conf
influential_tab<-tab[influential,]
write.csv(influential_tab,file="influential_tab.csv")
plot(influential_tab$var.sites,influential_tab$LR)
plot(influential_tab$var.sites,influential_tab$logLikelihood)
plot(influential_tab$LR,influential_tab$logLikelihood)
setwd('PreFiltered/')
