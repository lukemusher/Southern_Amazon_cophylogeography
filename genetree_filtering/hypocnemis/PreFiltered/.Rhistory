names (pca)
plot(PC1,PC2)
pca <- read.csv("~/Desktop/Psophia_10PCs.csv")
attach(pca)
names (pca)
PC1[Pop==P_crepitans]
Pop
PC1[Pop=P_crepitans]
PC1[Pop==P_crepitans]
PC1[Pop==P_crepitans,]
PC1[pca$Pop==P_crepitans]
PC1[pca$Pop=="P_crepitans"]
PC1[Pop=="P_crepitans"]
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-60,60), ylim=c(-80,40))
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="red")
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-60,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red")
plot(PC1,PC2)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="red")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
Pop
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,40), ylim=c(0,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,60), ylim=c(0,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(-60,40), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,50), ylim=c(-80,40))
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue")
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green")
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange")
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black")
source('~/.active-rstudio-document')
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-20), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-20,20))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15))
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue")
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green")
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pt=2)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pty=2)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pty=1)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pca=1)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pca=2)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = `9`)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="darkred", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="darkblue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="darkgreen", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,50), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-5,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC2[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC2[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC2[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(20,50), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(25,50), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(30,45), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
plot(PC1,PC2)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-70,-30), ylim=c(-15,15), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1,PC3)
plot(PC1,PC3)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-60,-40), ylim=c(-80,40), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-70,-40), ylim=c(-80,50), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-65,-40), ylim=c(-80,50), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-65,-40), ylim=c(-70,50), pch=19)
points(PC1[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC1[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC2[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-65,-40), ylim=c(-70,50), pch=19)
points(PC2[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC2[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC2[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-15,15), ylim=c(-70,50), pch=19)
points(PC2[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC2[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC4[Pop=="P_crepitans"],PC3[Pop=="P_crepitans"], col="red", xlim=c(-15,15), ylim=c(-70,50), pch=19)
points(PC4[Pop=="P_napensis"],PC3[Pop=="P_napensis"], col="blue", pch = 19)
points(PC4[Pop=="P_ochroptera"],PC3[Pop=="P_ochroptera"], col="green", pch = 19)
plot(PC1[Pop=="P_leucoptera"],PC2[Pop=="P_leucoptera"], col="red", xlim=c(30,45), ylim=c(-80,40), pch = 19)
points(PC1[Pop=="P_viridis"],PC2[Pop=="P_viridis"], col="blue", pch = 19)
points(PC1[Pop=="P_dextralis"],PC2[Pop=="P_dextralis"], col="green", pch = 19)
points(PC1[Pop=="P_obscura"],PC2[Pop=="P_obscura"], col="orange", pch = 19)
points(PC1[Pop=="P_interjecta"],PC2[Pop=="P_interjecta"], col="black", pch = 19)
library(devtools)
install_github("gehara/Pipemaster@developing")
source('~/.active-rstudio-document')
model<-main.menu()
library(pipemaster)
install.packages("phybase")
library(devtools)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("bomeara/phybase")
install.packages("devtools")
install.packages("devtools")
#install.packages("devtools")
library(devtools)
devtools::install_github("bomeara/phybase")
#install.packages("devtools")
library(devtools)
devtools::install_github("bomeara/phybase")
install_github("gehara/Pipemaster@developing")
install.packages("/Users/lmusher/AMNH/Monachus/phybase-master/")
install.packages("https://faculty.franklin.uga.edu/lliu/sites/faculty.franklin.uga.edu.lliu/files/phybase_1.4.tar.gz", repos=NULL)
install.packages("phybase")
devtools::install_github("bomeara/phybase")
install_github("gehara/Pipemaster@developing")
#install.packages("devtools")
library(devtools)
install_github("gehara/Pipemaster@developing")
install_github("cran/phybase")
install.packages("Rtools")
install.packages("rtools")
#install.packages("devtools")
library(devtools)
install_github("cran/phybase")
install_github("gehara/Pipemaster@developing")
model<-main.menu()
install_github("gehara/Pipemaster")
install_github("gehara/Pipemaster@developing")
library(PipeMaster)
model<-main.menu()
install.packages("phrapl")
if(!require("ape")){install.packages("ape",repos="http://cran.rstudio.com")}
if(!require("partitions")){install.packages("partitions",repos="http://cran.rstudio.com")}
if(!require("lattice")){install.packages("lattice",repos="http://cran.rstudio.com")}
if(!require("polynom")){install.packages("polynom",repos="http://cran.rstudio.com")}
if(!require("gmp")){install.packages("gmp",repos="http://cran.rstudio.com")}
if(!require("rgenoud")){install.packages("rgenoud",repos="http://cran.rstudio.com")}
if(!require("parallel")){install.packages("parallel",repos="http://cran.rstudio.com")}
if(!require("optimx")){install.packages("optimx",repos="http://cran.rstudio.com")}
if(!require("igraph")){install.packages("igraph",repos="http://cran.rstudio.com")}
if(!require("numDeriv")){install.packages("numDeriv",repos="http://cran.rstudio.com")}
if(!require("nloptr")){install.packages("nloptr",repos="http://cran.rstudio.com")}
if(!require("Matrix")){install.packages("Matrix",repos="http://cran.rstudio.com")}
if(!require("rgl")){install.packages("rgl",repos="http://cran.rstudio.com")}
if(!require("RColorBrewer")){install.packages("RColorBrewer",repos="http://cran.rstudio.com")}
if(!require("igraph")){install.packages("igraph",repos="http://cran.rstudio.com")}
if(!require("diagram")){install.packages("diagram",repos="http://cran.rstudio.com")}
if(!require("binom")){install.packages("binom",repos="http://cran.rstudio.com")}
if(!require("P2C2M")){install.packages("P2C2M",repos="http://cran.rstudio.com")}
devtools::install_github("bomeara/phrapl")
LR=2*(-81.68+-71.77)
pchisq(LR,1,lower.tail = FALSE)
?AIC
LR
LR=2*(ln(-81.68)-71.77)
LR=2*(log(-81.68)-log(71.77))
LR
LR=2*(log(-81.68)-log(-71.77))
LR=2*(-81.68)--71.77)
LR
LR=2*(-81.68)-(-71.77)
LR
pchisq(LR,1,lower.tail = FALSE)
LR=2*((-81.68)-(-71.77))
LR
pchisq(LR,1,lower.tail = FALSE)
pchisq(LR,1,lower.tail = FALSE)
pchisq(LR,3,lower.tail = FALSE)
pchisq(LR,4,lower.tail = FALSE)
pchisq(LR,1,lower.tail = FALSE)
p<-pchisq(LR,1,lower.tail = FALSE)
p
pchisq(19.82,1,lower.tail = FALSE)
LR=abs(2*((-81.68)-(-71.77)))
LR
pchisq(19.82,1,lower.tail = FALSE)
pchisq(LR,1,lower.tail = FALSE)
install.packages(c('knitr','dplyr','ggplot2','rmarkdown','devtools'), dep=T)
require("ape")
library(phytools)
library(ape)
library(phangorn)
library(ips)
library(parallel)
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/galbula/PreFiltered/")
LR<-get(load("../LR.Rdata"))
var.sites<-get(load("../var.sites.Rdata"))
seq.length<-get(load("../seq.length.Rdata"))
outgroup<-"reference"
lh<-mcmapply(get.likelihood,files,trees,mc.cores=3)
get.likelihood<-function(dna,tree){
x<-read.nexus.data(dna)
x<-as.DNAbin(x)
X<-as.phyDat(x)
t<-c()
counts=0
tree<-read.tree(tree)
for(i in 1:length(tree$tip.label)){
if(!(tree$tip.label[i] %in% labels(X))){
counts=counts+1
t[counts]<-tree$tip.label[i]
}
}
t<-t[!is.na(t)]
tree1<-drop.tip(tree,tree$tip.label[na.omit(match(t,tree$tip.label))])
fit<-pml(tree1, X, model="GTRG")   #do likelihood estimation of the distance tree
return(fit$logLik)
}
lh<-mcmapply(get.likelihood,files,trees,mc.cores=3)
files <- list.files(path="./", pattern="*.nexus", full.names=F, recursive=FALSE)
trees <- list.files(path="./",pattern="*.tre",full.names=F,recursive=FALSE)
outgroup<-"reference"
lh<-mcmapply(get.likelihood,files,trees,mc.cores=3)
LR<-get(load("../LR.Rdata"))
var.sites<-get(load("../var.sites.Rdata"))
seq.length<-get(load("../seq.length.Rdata"))
lh<-get(load("../likelihoods.Rdata"))
save(lh,file = "../likelihoods.Rdata")
lh<-get(load("../likelihoods.Rdata"))
list2vector<-function(x){
y<-c()
for (i in 1:length(x)){
if (x[i]!="NULL"){
y[i]<-x[[i]]
}
}
return(y)
}
var.sites.v<-list2vector(var.sites)
seq.length.v<-list2vector(seq.length)
var.frac.v<-var.sites.v/seq.length.v
LR.v<-list2vector(LR)
lh.v<-list2vector(lh)
df<-as.data.frame(cbind(files,trees,lh.v,seq.length.v,var.frac.v,var.sites.v,LR.v))
df
colnames(df)<-c("alignment","tree","logLikelihood","seq.length","var.frac","var.sites","LR")
write.csv(df,file="../Galb_gt_metrics.csv")
lh.v
library(gmodels)
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/galbula/")
par(mfrow=c(1,1))
tab<-read.csv("Galb_gt_metrics.csv",header = T)
attach(tab)
names(tab)
tr<-read.tree("PreFiltered/locus74037.tre")
tr<-read.tree("PreFiltered/locus760.tre")
plot(tr)
var.sites<-as.numeric(var.sites)
LR<-as.vector(LR)
plot(var.sites,LR)
var.sites<-as.numeric(var.sites)
var.sites
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/galbula/")
par(mfrow=c(1,1))
tab<-read.csv("Galb_gt_metrics.csv",header = T)
attach(tab)
names(tab)
var.sites<-as.numeric(var.sites)
LR<-as.vector(LR)
plot(var.sites,LR)
LR
as.vector(LR)
LR<-as.vector(LR)
LR<-as.numeric(LR)
LR<-as.numeric(as.vector(LR))
library(gmodels)
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/galbula/")
par(mfrow=c(1,1))
tab<-read.csv("Galb_gt_metrics.csv",header = T)
attach(tab)
names(tab)
var.sites<-as.numeric(var.sites)
LR<-as.vector(LR)
LR
plot(var.sites,LR)
plot(var.sites,logLikelihood)
plot(LR,logLikelihood)
plot(var.sites,LR)
plot(var.sites,logLikelihood)
plot(LR,logLikelihood)
range(LR)
mean(LR)
sd(LR)
library(gmodels)
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/galbula/")
par(mfrow=c(1,1))
tab<-read.csv("Galb_gt_metrics.csv",header = T)
attach(tab)
names(tab)
var.sites<-as.numeric(var.sites)
LR<-as.vector(LR)
plot(var.sites,LR)
plot(var.sites,logLikelihood)
plot(LR,logLikelihood)
range(LR)
mean(LR)
sd(LR)
mod<-glm(LR~var.sites+logLikelihood)
cooksd<-cooks.distance(mod)
summary(mod)
plot(cooksd, pch="+", cex=1, main="Influential Obs by Cooks distance")
abline(h=2*mean(cooksd, na.rm=T), col="red")
points(x=ifelse(cooksd>2*mean(cooksd, na.rm=T), names(cooksd),""), col="red")
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>3*mean(cooksd, na.rm=T), names(cooksd),""),col="red")
influential <- as.numeric(names(cooksd)[cooksd > 2*mean(cooksd, na.rm=T)])
influential
tab[influential, ]
x<-c(1:length(LR))
x
filtered_tab<-tab[! x %in% influential,]
write.csv(filtered_tab,file="filtered_tab.csv")
filtered_tab<-read.csv("filtered_tab.csv")
plot(filtered_tab$var.sites,filtered_tab$LR)
plot(filtered_tab$var.sites,filtered_tab$logLikelihood)
plot(filtered_tab$LR,filtered_tab$logLikelihood)
confidence_interval <- function(vector, interval) {
# Standard deviation of sample
vec_sd <- sd(vector)
# Sample size
n <- length(vector)
# Mean of sample
vec_mean <- mean(vector)
# Error according to t distribution
error <- qt((interval + 1)/2, df = n - 1) * vec_sd / sqrt(n)
# Confidence interval as a vector
result <- c("lower" = vec_mean - error, "upper" = vec_mean + error)
return(result)
}
conf<-confidence_interval(filtered_tab$var.sites,0.975)
conf
confidence_interval(filtered_tab$var.sites,0.95)
influential_tab<-tab[influential,]
write.csv(influential_tab,file="influential_tab.csv")
influential_tab
plot(influential_tab$var.frac,influential_tab$LR)
plot(influential_tab$var.frac,influential_tab$logLikelihood)
plot(influential_tab$LR,influential_tab$logLikelihood)
plot(influential_tab$var.sites,influential_tab$LR)
plot(influential_tab$var.sites,influential_tab$logLikelihood)
plot(influential_tab$LR,influential_tab$logLikelihood)
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/hypocnemis/")
require("ape")
library(phytools)
library(ape)
library(phangorn)
library(ips)
library(parallel)
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/hypocnemis/")
setwd("~/AMNH/Roosevelt_Project/Data/genetrees/hypocnemis/PreFiltered/")
files <- list.files(path="./", pattern="*.nexus", full.names=F, recursive=FALSE)
files
trees <- list.files(path="./",pattern="*.tre",full.names=F,recursive=FALSE)
trees
outgroup<-"reference"
pis<-function(x){
x<-read.nexus.data(x)
len<-length(x[[1]])
site<-c()
counts=0
for(j in 1:length(x[[1]])){
for(i in 1:length(x)){
site[i]<-(x[[i]][j])
}
if(!("n" %in% unique(site))&!("-" %in% unique(site))){
if (length(unique(site))>=2){
counts=counts+1
}
}
else if(!("n" %in% unique(site))){
if (length(unique(site))>=3){
counts=counts+1
}
}
else if(!("-" %in% unique(site))){
if (length(unique(site))>=3){
counts=counts+1
}
}
else if (length(unique(site))>4){
counts=counts+1
}
else counts=counts
}
return(counts)
}
site_count<-function(x){
x<-read.nexus.data(x)
len<-length(x[[1]])
return(len)
}
is.clocklike<-function(dna,tree){
print(dna)
x<-read.nexus.data(dna)
x<-as.DNAbin(x)
X<-as.phyDat(x)
t<-c()
counts=0
tree<-read.tree(tree)
for(i in 1:length(tree$tip.label)){
if(!(tree$tip.label[i] %in% labels(X))){
counts=counts+1
t[counts]<-tree$tip.label[i]
}
}
t<-t[!is.na(t)]
tree1<-drop.tip(tree,tree$tip.label[na.omit(match(t,tree$tip.label))])
tree1<-force.ultrametric(tree1, method="nnls")
fit<-pml(tree1, X, model="GTRG")   #do likelihood estimation of the distance tree
chr<-tryCatch(chronopl(phy=root(tree1,outgroup), lambda=1.0, age.min=1, CV=T),error=function(e) NULL)
fit2<-tryCatch(pml(chr, X, model="GTRG"), error=function(e) "NA")   #do likelihood estimation of the distance tree
if(fit2!="NA"){
LR=(2*(fit$logLik-fit2$logLik))
}
if(fit2=="NA"){
LR=NULL
}
return(LR)
}
get.likelihood<-function(dna,tree){
x<-read.nexus.data(dna)
x<-as.DNAbin(x)
X<-as.phyDat(x)
t<-c()
counts=0
tree<-read.tree(tree)
for(i in 1:length(tree$tip.label)){
if(!(tree$tip.label[i] %in% labels(X))){
counts=counts+1
t[counts]<-tree$tip.label[i]
}
}
t<-t[!is.na(t)]
tree1<-drop.tip(tree,tree$tip.label[na.omit(match(t,tree$tip.label))])
fit<-pml(tree1, X, model="GTRG")   #do likelihood estimation of the distance tree
return(fit$logLik)
}
LR<-mcmapply(is.clocklike,files,trees,mc.cores = 3)
files[10]
trees[10]
files[1000]
trees[1000]
files[1001]
trees[1001]
files[10001]
trees[10001]
files[10009]
trees[10009]
